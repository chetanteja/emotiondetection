{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\quizapp\\\\src\\\\EmotionRecognition\\\\Camera.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Test from '../Test';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Camera(_ref) {\n  _s();\n  let {\n    changeEmotion\n  } = _ref;\n  const [stream, setStream] = useState(null);\n  const [imageData, setImageData] = useState(null);\n  const [output, setOutput] = useState('init');\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const getMediaStream = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          aspectRatio: 1\n        },\n        audio: true\n      });\n      setStream(stream);\n    } catch (error) {\n      console.log('error accessing media devices', error);\n    }\n  };\n  useEffect(() => {\n    getMediaStream();\n  }, []);\n  useEffect(() => {\n    if (stream && videoRef.current) {\n      videoRef.current.srcObject = stream;\n    }\n  }, [stream]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (stream && videoRef.current && canvasRef.current) {\n        const context = canvasRef.current.getContext('2d');\n        context.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n        const imageData = canvasRef.current.toDataURL('image/jpg');\n        setImageData(imageData);\n        canvasRef.current.toBlob(blob => {\n          const formData = new FormData();\n          formData.append('image', blob, 'image.jpg');\n          fetch('http://localhost:5000/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              image_data: imageData\n            })\n          }).then(response => response.json()).then(data => {\n            setOutput(data.output);\n          }).catch(error => console.log(error));\n        }, 'image/jpeg', 0.8);\n      }\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [stream]);\n  useEffect(() => {\n    if (output === \"\") {\n      changeEmotion(\"Happy\");\n    } else {\n      changeEmotion(output);\n    }\n  }, [output]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        muted: true,\n        className: \"video-tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"320\",\n        height: \"240\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: '240px'\n        },\n        children: [\"Output: \", output]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Camera, \"xmyuqYl196soN8PYw+qE/cFlkIk=\");\n_c = Camera;\nexport default Camera;\nvar _c;\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Test","jsxDEV","_jsxDEV","Camera","_ref","_s","changeEmotion","stream","setStream","imageData","setImageData","output","setOutput","videoRef","canvasRef","getMediaStream","navigator","mediaDevices","getUserMedia","video","aspectRatio","audio","error","console","log","current","srcObject","interval","setInterval","context","getContext","drawImage","width","height","toDataURL","toBlob","blob","formData","FormData","append","fetch","method","headers","body","JSON","stringify","image_data","then","response","json","data","catch","clearInterval","children","className","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","style","display","marginTop","_c","$RefreshReg$"],"sources":["C:/project/quizapp/src/EmotionRecognition/Camera.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Test from '../Test';\r\n\r\n\r\nfunction Camera({changeEmotion}) {\r\n  const [stream, setStream] = useState(null);\r\n  const [imageData, setImageData] = useState(null);\r\n  const [output , setOutput ] = useState('init');\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const getMediaStream = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: { aspectRatio: 1 }, audio: true });\r\n      setStream(stream);\r\n    } catch (error) {\r\n      console.log('error accessing media devices', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMediaStream();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (stream && videoRef.current) {\r\n      videoRef.current.srcObject = stream;\r\n    }\r\n  }, [stream]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (stream && videoRef.current && canvasRef.current) {\r\n        const context = canvasRef.current.getContext('2d');\r\n        context.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        const imageData = canvasRef.current.toDataURL('image/jpg');\r\n        setImageData(imageData);\r\n        canvasRef.current.toBlob((blob) => {\r\n          const formData = new FormData();\r\n          formData.append('image', blob, 'image.jpg');\r\n          fetch('http://localhost:5000/', { method: 'POST', headers: {\r\n              'Content-Type': 'application/json'\r\n            }, body: JSON.stringify({ image_data: imageData}) })\r\n            .then((response) => response.json())\r\n            .then((data) =>{\r\n              setOutput(data.output);\r\n         } )\r\n            .catch((error) => console.log(error));\r\n        }, 'image/jpeg', 0.8);\r\n      }\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [stream]);\r\n\r\n  useEffect(()=>{\r\n    if(output===\"\")\r\n    {\r\n      changeEmotion(\"Happy\")\r\n    }\r\n    else{\r\n      changeEmotion(output)\r\n    } \r\n  },[output])\r\n\r\n  return (\r\n    <div>\r\n      <div className='video'>\r\n        <video ref={videoRef} autoPlay muted className='video-tag' />\r\n        <canvas ref={canvasRef} width='320' height='240' style={{ display: 'none' }} />\r\n        <h2 style={{ marginTop:'240px' }}>Output: {output}</h2>\r\n      </div>\r\n      {<Test/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Camera;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}